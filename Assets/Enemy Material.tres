[gd_resource type="ShaderMaterial" load_steps=31 format=2]

[ext_resource path="res://Assets/Crosshatch Hard.png" type="Texture" id=1]
[ext_resource path="res://Assets/Crosshatch Simple.png" type="Texture" id=2]
[ext_resource path="res://Assets/Crosshatch Medium.png" type="Texture" id=3]

[sub_resource type="VisualShaderNodeTexture" id=1]
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeTexture" id=2]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeScalarOp" id=3]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=4]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "view"

[sub_resource type="VisualShaderNodeVectorOp" id=6]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 16, 16, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=7]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=8]

[sub_resource type="VisualShaderNodeScalarOp" id=9]
operator = 9

[sub_resource type="VisualShaderNodeScalarFunc" id=10]
function = 31

[sub_resource type="VisualShaderNodeInput" id=11]
input_name = "light"

[sub_resource type="VisualShaderNodeScalarOp" id=12]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=13]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=14]

[sub_resource type="VisualShaderNodeScalarOp" id=15]
default_input_values = [ 0, 0.0, 1, 5.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=16]
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=17]
constant = Color( 1, 0, 0, 1 )

[sub_resource type="VisualShaderNodeInput" id=26]
input_name = "attenuation"

[sub_resource type="VisualShaderNodeVectorOp" id=27]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=18]
input_name = "normal"

[sub_resource type="VisualShaderNodeDotProduct" id=19]

[sub_resource type="VisualShaderNodeScalarOp" id=20]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 9

[sub_resource type="VisualShaderNodeScalarFunc" id=21]
function = 31

[sub_resource type="VisualShaderNodeScalarOp" id=22]
default_input_values = [ 0, 0.0, 1, 0.75 ]
operator = 9

[sub_resource type="VisualShaderNodeScalarFunc" id=23]
function = 31

[sub_resource type="VisualShaderNodeTexture" id=24]
texture = ExtResource( 1 )

[sub_resource type="VisualShader" id=25]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_lgt_9;
uniform sampler2D tex_lgt_10;
uniform sampler2D tex_lgt_11;



void vertex() {
// Output:0

}

void fragment() {
// Output:0

}

void light() {
// Color:25
	vec3 n_out25p0 = vec3(1.000000, 0.000000, 0.000000);
	float n_out25p1 = 1.000000;

// Input:2
	vec3 n_out2p0 = LIGHT;

// Input:3
	vec3 n_out3p0 = NORMAL;

// DotProduct:4
	float n_out4p0 = dot(n_out2p0, n_out3p0);

// ScalarOp:18
	float n_in18p1 = 0.00000;
	float n_out18p0 = step(n_out4p0, n_in18p1);

// ScalarFunc:19
	float n_out19p0 = 1.0 - n_out18p0;

// ScalarOp:5
	float n_in5p1 = 0.50000;
	float n_out5p0 = step(n_out4p0, n_in5p1);

// ScalarFunc:6
	float n_out6p0 = 1.0 - n_out5p0;

// ScalarOp:20
	float n_out20p0 = n_out19p0 - n_out6p0;

// Input:14
	vec3 n_out14p0 = VIEW;

// VectorOp:15
	vec3 n_in15p1 = vec3(16.00000, 16.00000, 0.00000);
	vec3 n_out15p0 = n_out14p0 * n_in15p1;

// Texture:9
	vec4 tex_lgt_9_read = texture(tex_lgt_9, n_out15p0.xy);
	vec3 n_out9p0 = tex_lgt_9_read.rgb;
	float n_out9p1 = tex_lgt_9_read.a;

// ScalarOp:21
	float n_out21p0 = n_out20p0 * n_out9p1;

// Texture:10
	vec4 tex_lgt_10_read = texture(tex_lgt_10, n_out15p0.xy);
	vec3 n_out10p0 = tex_lgt_10_read.rgb;
	float n_out10p1 = tex_lgt_10_read.a;

// ScalarOp:7
	float n_in7p1 = 0.75000;
	float n_out7p0 = step(n_out4p0, n_in7p1);

// ScalarFunc:8
	float n_out8p0 = 1.0 - n_out7p0;

// ScalarOp:12
	float n_out12p0 = n_out6p0 - n_out8p0;

// ScalarOp:16
	float n_out16p0 = n_out10p1 * n_out12p0;

// Texture:11
	vec4 tex_lgt_11_read = texture(tex_lgt_11, n_out15p0.xy);
	vec3 n_out11p0 = tex_lgt_11_read.rgb;
	float n_out11p1 = tex_lgt_11_read.a;

// ScalarOp:13
	float n_out13p0 = n_out11p1 * n_out8p0;

// ScalarOp:17
	float n_out17p0 = n_out16p0 + n_out13p0;

// ScalarOp:22
	float n_out22p0 = n_out21p0 + n_out17p0;

// ScalarOp:23
	float n_in23p1 = 5.00000;
	float n_out23p0 = n_out22p0 * n_in23p1;

// VectorOp:24
	vec3 n_out24p0 = n_out25p0 * vec3(n_out23p0);

// Input:26
	vec3 n_out26p0 = ATTENUATION;

// VectorOp:27
	vec3 n_out27p0 = n_out24p0 * n_out26p0;

// Output:0
	SPECULAR_LIGHT = n_out27p0;

}
"
graph_offset = Vector2( -762.23, 401.124 )
nodes/light/0/position = Vector2( 1160, 40 )
nodes/light/2/node = SubResource( 11 )
nodes/light/2/position = Vector2( -540, 180 )
nodes/light/3/node = SubResource( 18 )
nodes/light/3/position = Vector2( -540, 260 )
nodes/light/4/node = SubResource( 19 )
nodes/light/4/position = Vector2( -360, 180 )
nodes/light/5/node = SubResource( 20 )
nodes/light/5/position = Vector2( -200, 180 )
nodes/light/6/node = SubResource( 21 )
nodes/light/6/position = Vector2( -40, 180 )
nodes/light/7/node = SubResource( 22 )
nodes/light/7/position = Vector2( -200, 300 )
nodes/light/8/node = SubResource( 23 )
nodes/light/8/position = Vector2( -40, 300 )
nodes/light/9/node = SubResource( 24 )
nodes/light/9/position = Vector2( -60, 920 )
nodes/light/10/node = SubResource( 1 )
nodes/light/10/position = Vector2( -60, 680 )
nodes/light/11/node = SubResource( 2 )
nodes/light/11/position = Vector2( -60, 440 )
nodes/light/12/node = SubResource( 3 )
nodes/light/12/position = Vector2( 120, 180 )
nodes/light/13/node = SubResource( 4 )
nodes/light/13/position = Vector2( 214, 393 )
nodes/light/14/node = SubResource( 5 )
nodes/light/14/position = Vector2( -560, 480 )
nodes/light/15/node = SubResource( 6 )
nodes/light/15/position = Vector2( -260, 440 )
nodes/light/16/node = SubResource( 7 )
nodes/light/16/position = Vector2( 280, 180 )
nodes/light/17/node = SubResource( 8 )
nodes/light/17/position = Vector2( 485, 282 )
nodes/light/18/node = SubResource( 9 )
nodes/light/18/position = Vector2( -200, 60 )
nodes/light/19/node = SubResource( 10 )
nodes/light/19/position = Vector2( -40, 60 )
nodes/light/20/node = SubResource( 12 )
nodes/light/20/position = Vector2( 120, 60 )
nodes/light/21/node = SubResource( 13 )
nodes/light/21/position = Vector2( 280, 60 )
nodes/light/22/node = SubResource( 14 )
nodes/light/22/position = Vector2( 460, 60 )
nodes/light/23/node = SubResource( 15 )
nodes/light/23/position = Vector2( 620, 60 )
nodes/light/24/node = SubResource( 16 )
nodes/light/24/position = Vector2( 780, 60 )
nodes/light/25/node = SubResource( 17 )
nodes/light/25/position = Vector2( 659.77, -52.8762 )
nodes/light/26/node = SubResource( 26 )
nodes/light/26/position = Vector2( 760, 180 )
nodes/light/27/node = SubResource( 27 )
nodes/light/27/position = Vector2( 940, 60 )
nodes/light/connections = PoolIntArray( 4, 0, 5, 0, 2, 0, 4, 0, 3, 0, 4, 1, 5, 0, 6, 0, 4, 0, 7, 0, 7, 0, 8, 0, 6, 0, 12, 0, 8, 0, 12, 1, 11, 1, 13, 0, 8, 0, 13, 1, 14, 0, 15, 0, 15, 0, 11, 0, 15, 0, 10, 0, 15, 0, 9, 0, 10, 1, 16, 0, 12, 0, 16, 1, 16, 0, 17, 0, 13, 0, 17, 1, 4, 0, 18, 0, 18, 0, 19, 0, 19, 0, 20, 0, 6, 0, 20, 1, 20, 0, 21, 0, 9, 1, 21, 1, 21, 0, 22, 0, 17, 0, 22, 1, 22, 0, 23, 0, 23, 0, 24, 1, 25, 0, 24, 0, 24, 0, 27, 0, 26, 0, 27, 1, 27, 0, 0, 1 )

[resource]
shader = SubResource( 25 )
